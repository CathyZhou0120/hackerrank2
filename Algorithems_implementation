#1. Mini-Max Sum
a,b,c,d,e = input().strip().split(' ')
a,b,c,d,e = [int(a),int(b),int(c),int(d),int(e)]

list_sum = [a,b,c,d,e]
list_sum = sorted(list_sum)

print(sum(list_sum[0:4]), sum(list_sum[1:5]))


#2. Designer PDF Viewer
h = [int(h_temp) for h_temp in input().strip().split(' ')]
word = input().strip()


height = []
for i in word:
    height += [h[ord(i) - ord('a')]]
print (len(word) * max(height))

#3.Apple and Orange
s,t = input().strip().split(' ')
s,t = [int(s),int(t)]
a,b = input().strip().split(' ')
a,b = [int(a),int(b)]
m,n = input().strip().split(' ')
m,n = [int(m),int(n)]
apple = [int(apple_temp) for apple_temp in input().strip().split(' ')]
orange = [int(orange_temp) for orange_temp in input().strip().split(' ')]

apple_list = []
orange_list = []

for i in apple:
    if a+i >= s and a +i <= t:
        apple_list.append(i)

for i in orange:
    if b + i >=s and b+i <= t:
        orange_list.append(i)

print (len(apple_list))
print (len(orange_list))
        
#4.Kangaroo
x1,v1,x2,v2 = input().strip().split(' ')
x1,v1,x2,v2 = [int(x1),int(v1),int(x2),int(v2)]

if (x1 > x2 and v1 >= v2) or (x1 < x2 and v1 <= v2) or abs(x1-x2) % abs(v1-v2) != 0:
    print ('NO')
else:
    print ('YES')
    
#5.Between Two Sets
n,m = input().strip().split(' ')
n,m = [int(n),int(m)]
a = [int(a_temp) for a_temp in input().strip().split(' ')]
b = [int(b_temp) for b_temp in input().strip().split(' ')]

a.sort()
b.sort()
ausgabe = 0
for q in range(b[0] +1):
    if q >= a[-1]:
        for t in range(n):
            if q % a[t] != 0:
                break
            if t == n -1:
                for g in range(m):
                    if b[g] % q != 0:
                        break
                    if g == m -1:
                        ausgabe += 1
      
print(ausgabe)

#6.Divisible Sum Pairs
n,k = input().strip().split(' ')
n,k = [int(n),int(k)]
a = [int(a_temp) for a_temp in input().strip().split(' ')]


result_i =[]
result_j = []

for i in range(n):
    for j in range(n):
        if (a[i] + a[j]) % k == 0 and i <j:
            result_i.append(i)
            result_j.append(j)
print (len(result_i))

#7.Bon AppÃ©tit
total_price = sum(c)
split_in_half = sum(c)/2

total_price_2 = sum(c) - c[k]
split_in_half_2 = total_price_2/2

if split_in_half_2 == b:
    print ('Bon Appetit')
else:
    print (int(abs(split_in_half-split_in_half_2)))

#8.Sock Merchant

d = {x:c.count(x) for x in c}

value_list = list(d.values())

value_list_2 = []

for i in value_list:
	if i >1 :
		value_list_2.append(i)

value_list_3=[]

for i in value_list_2:
	if i%2==0:
		value_list_3.append(i)
	else:
		value_list_3.append(i-1)

print(int(sum(value_list_3)/2))

#9.Utopian Tree
import sys

t = int(input().strip())
for a0 in range(t):
    n = int(input().strip())
    height = 1
    if n == 0:
        print(1)
    elif n % 2 == 0:
        height = 2 ** ((n/2) + 1) - 1
        print(int(height))
    elif n % 2 == 1:
        height = 2 ** ((n + 3)/2) - 2
        print(int(height))

#10.Angry Professor
import sys


t = int(input().strip())
for a0 in range(t):
    n,k = input().strip().split(' ')
    n,k = [int(n),int(k)]
    a = [int(a_temp) for a_temp in input().strip().split(' ')]
    print('YES' if len([i for i in a if i<=0])<k else 'NO')

#11.Beautiful Days at the Movies
i, j, k = [int(x) for x in input().split()]

beautiful_day = []

for day in range(i,j+1):
	day = str(day)
	day_r = day[::-1]
	if abs(int(day) - int(day_r))%k ==0:
		beautiful_day.append(int(i))

print(len(beautiful_day))

#12.Viral Advertising
import math
n = int(input())
origin = 5
origin_list=[]

for i in range(n):
    origin = (math.floor(origin/2))
    origin_list.append(origin)
    origin = origin *3
    

print(int(sum(origin_list)))

#13.Save the Prisoner
T = int(input().strip())
for _ in range(T):
    N,M,S = list(map(int, input().strip().split()))
    print(((S - 1 + M - 1) % N) + 1)
    
#14.Jumping on the Clouds: Revisited
import sys


n,k = input().strip().split(' ')
n,k = [int(n),int(k)]
c = [int(c_temp) for c_temp in input().strip().split(' ')]
i = k % n 
energy = 100
energy -= c[i] * 2 + 1 
while i != 0:
    i = (i + k) % n
    energy -= c[i] * 2 + 1
    
print (energy)


#15.Find Digits
import sys


t = int(input().strip())
for a0 in range(t):
    n = int(input().strip())
    n = str(n)
    n_i = []
    for i in n:
        if int(i)!=0:
            n_i.append(int(i))
    n_ii =[]
    for i in n_i:
        if int(n)%i==0:
            n_ii.append(i)
            
    print(len(n_ii))
    
 #16.Extra Long Factorials
 import sys
import operator
import functools

n = int(input().strip())
n_l = []
for i in range(1,n+1):
    n_l.append(i)

print (functools.reduce(lambda x, y: x*y, n_l))

#17.Append and Delete (unresolved)

#18.Sherlock and Squares
import math
t = int(input().strip())
for a0 in range(t):
    a,b = input().strip().split(' ')
    a,b = [int(a),int(b)]
    square_root=[]
    for i in range(a,b+1):
        if math.sqrt(i)-int(math.sqrt(i)) ==0:
            square_root.append(i)
    print(len(square_root))

#19.Library Fine
import sys
from datetime import datetime

d1,m1,y1 = input().strip().split(' ')
d1,m1,y1 = [int(d1),int(m1),int(y1)]
d2,m2,y2 = input().strip().split(' ')
d2,m2,y2 = [int(d2),int(m2),int(y2)]

date_actual  = datetime(year=y1, month=m1, day=d1)
date_expected  = datetime(year=y2, month=m2, day=d2)

if date_expected >= date_actual:
    print(0)
elif date_expected < date_actual and  (date_actual - date_expected).days<= 30 and y1==y2:
    print(15*(d1-d2))
elif date_expected < date_actual and (date_actual - date_expected).days > 30 and y1 == y2:
    print(500*(m1-m2))
elif date_expected < date_actual and  y1!=y2:
    print(10000)


#20.Cut the sticks
import sys

n = int(input().strip())
arr = [int(arr_temp) for arr_temp in input().strip().split(' ')]

while(len(arr)):
    print(len(arr))
    arr = [x - min(arr) for x in arr if x - min(arr)>0]

#21.



        
