#1.Tree: Preorder Traversal
"""
Node is defined as
self.left (the left child of the node)
self.right (the right child of the node)
self.data (the value of the node)
"""
def preOrder(root):
    #Write your code here
    if root:
        print(str(root.data)+" ", end="") #print on same line
        preOrder(root.left)
        preOrder(root.right)
    
    
#2.Tree: Postorder Traversal
"""
Node is defined as
self.left (the left child of the node)
self.right (the right child of the node)
self.data (the value of the node)
"""
def postOrder(root):
    #Write your code here
    if root.left is not None:
        postOrder(root.left)
    if root.right is not None:
        postOrder(root.right)
    print (root.data,end=' ')
    
    
    
#3.Tree: Inorder Traversal
"""
Node is defined as
self.left (the left child of the node)
self.right (the right child of the node)
self.data (the value of the node)
"""
def inOrder(root):
    stack = []
    while root or stack:
        while root:
            stack.append(root)
            root = root.left
        root = stack.pop()
        print (root.data,end=' ')
        root = root.right
        
        
#4.        
